@startuml
skinparam backgroundColor transparent
skinparam classBackgroundColor LightGoldenRodYellow
skinparam classarrows red
skinparam classFontName Menlo
skinparam colors yellow
skinparam ActorBorderColor red
skinparam classborderColor darkred
left to right direction



title Standardization Effort Version 1.1
/'
The axon is connected to the Presynaptic 
sending a chemical to be released into the 
Postsynaptic.
'/
Cell ---[#darkred]-* Soma
Soma -[#darkred]-* Spine
Soma ------[#darkred]-* Axon
Soma -[#darkred]-* Dendrite
Soma -[#darkred]-* Cilia 
Dendrite -[#darkred]-* Shaft
Dendrite -[#darkred]-* Spine
Axon -[#darkred]-* Axon_Initial_Segment
Axon -[#darkred]-* Bouton
Gap_Junctions -[#darkred]-* Axon
Myelin -[#darkred]-* Axon
Synapse -[#darkred]-* Axon
Synapse -[#darkred]-* Dendrite
Synapse -[#darkred]-* Axon_Initial_Segment
Synapse -[#darkred]-* Bouton
Synapse ---[#darkred]-* Spine
Synapse ---[#darkred]-* Shaft
Synapse -[#darkred]-* Soma 
Spine_Apparatus -[#darkred]* Spine
Organelles -[#darkred]-* Gap_Junctions
Organelles -[#darkred]-* Nucleus
Organelles -[#darkred]-* Mitochondria
Organelles -[#darkred]-* SynapticVesicle
Organelles -[#darkred]-* Myelin
Organelles -[#darkred]-* Cleft
Organelles -[#darkred]-* Spine_Apparatus
Nucleus -[#darkred]-* Soma
Cleft -[#darkred]-* Synapse 
Mitochondria -[#darkred]-* All_Cell_Compartments
SynapticVesicle -[#darkred]-* Synapse

class Cell{
	*Cell Types:
	Neuron : boolean, 
	Glia : boolean
	
	*Neuron Types:
	sensory_neurons: enum,
	motor_neurons : enum,
	interneurons: enum

	*Glia Types: 
		astrocytes : enum,
		microglia : enum,
		oligodendrocyte : enum

	*Regions of Interest:
	layer : enum,
	brain_regions : enum,
	cylinder : enum

	*Optional Cell Properties:
		multipolar : enum,
		bipolar : enum,
		unipolar : enum,
		anaxonic : enum,
		number_of_blood_vessel_cells : enum,
		interneuron-type : str,
        pyramidal : enum,
		c-shaped : enum,
        spiny-stellate : enum,
        excitatory/spiny-with-atypical-tree : enum,
        sparsely-spiny : enum,
        lots-of-spines : enum,
        possible-interneuron : enum,
        web-like-interneuron : enum,
        lot-of-axon : enum,
        EIRatio : enum,
		precursor : enum
}
class Bouton{

}

class Mitochondria{
*Optional Mitochondria Properties:
lipids : enum,
proteins : enum
}


class Dendrite{
*Dendrite Properties: 
		apical_dendrite : enum,
		basal_dendrite : enum,
		base_neuron_id : str

*Synapse Site:
			type : enum,
			class_label : enum,
			neuron_id : str


	*Optional Dendrite Properties:
		number_dendriteskeleton_nodes : enum,
		number_dendriticspineskeleton_nodes : enum,
		number_ciliumskeleton_nodes : enum,
		dendritic_shaft : enum,
		dendritic_spine : enum
--
    *location: 
        x : int
        y : int
        z : int
   
    *bounding_box: 
            x : int
            y : int
            z : int
       
      *size: 
            x : int
            y : int
            z : int
} 

class Spine_Apparatus{

}


class Spine{
--
*Optional Spine Properties:
number_of_spines: int,
spine_protrusions: str
}


class Soma{
*Optional Soma Properties:
	cell body: boolean

}

class Synapse{
	*Chemical: 
		presynaptic : enum,
		postsynaptic : enum

	*Electrical: 
		gap_junction_location : str, 
		gap_junction_id : enum

	
	*Optional Synapse Properties:
	number_output_synapses : enum,
	number_input_synapses : enum,
	number_excitatory_synapses : enum,
	number_inhibitory_synapses : enum,
	number_outgoing_synapses : enum,
	number_incoming_synapses : enum,
	number_incomingexcitatory_synapses : enum,
	number_incominginhibitory_synapses : enum
}

class Organelles{
	*Ribosomes : boolean,
    *Endoplasmic_Reticulum : boolean,
	*Mitochondria : boolean,
	*Golgi_Apparatus : boolean,
	*Spine_Apparatus : boolean,
    *SynapticVesicle : boolean,
	*Nucleus : boolean,
	*Gap_Junctions : boolean,
	*Myelin : boolean,
	*Plasma Membrane : boolean

}
class Nucleus{
*Optional Nucleus Properties:
nucleolus : boolean
}


class Axon{
	*Axon Properties: 
	axon_terminal  : boolean,
	myelinated_axon : boolean,
	base_neuron_id : enum

*Synapse Site:
		pre_synaptic_site : enum,
		neuron_id : enum,
		type : str,
		class_label : str

*Optional Axon Properties:
	number_of_axons : enum,
	number_axonskeleton_nodes : enum,
	number_ciliumskeleton_nodes : enum,
	number_axoninitialsegmentskeleton_nodes : enum,
	number_myelinatedaxonskeleton_nodes : enum
--
    *location: 
        x : int
        y : int
        z : int
   
    *bounding_box: 
            x : int
            y : int
            z : int
       
       *size: 
            x : int
            y : int
            z : int
} 
class SynapticVesicle{

} 

class Axon_Initial_Segment{
	*Optional Axon_Initial_Segment Properties:
	myelin: boolean

}
@enduml
